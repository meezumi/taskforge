version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: taskforge-postgres
    environment:
      POSTGRES_USER: taskforge
      POSTGRES_PASSWORD: taskforge123
      POSTGRES_DB: taskforge
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskforge"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: taskforge-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: taskforge-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (uncomment when ready to containerize)
  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: ../docker/Dockerfile.backend
  #   container_name: taskforge-backend
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     DATABASE_URL: postgresql://taskforge:taskforge123@postgres:5432/taskforge
  #     REDIS_URL: redis://redis:6379
  #     S3_ENDPOINT: http://minio:9000
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #     minio:
  #       condition: service_healthy
  #   volumes:
  #     - ./backend/uploads:/app/uploads

volumes:
  postgres_data:
  redis_data:
  minio_data:
